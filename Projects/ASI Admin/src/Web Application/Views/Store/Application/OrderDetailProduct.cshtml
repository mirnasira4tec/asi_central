@using asi.asicentral.web
@using asi.asicentral.model.store
@using asi.asicentral.web.Controllers.Store
@model asi.asicentral.web.model.store.OrderDetailApplicationModel

@{
    Layout = "~/Views/Shared/_StoreLayout.cshtml";
}

<h1>@string.Format(Model.ProductName) (#@Model.OrderId)</h1>
@if (Model.Price > 0.0m)
{
<p>@Model.ProductName product purchase fee is @Model.Price.ToString("C")</p>
}
@Html.Partial("../Store/Application/Shared/OrderSummary", Model)
@using (Html.BeginForm("EditOrderDetailProduct", "Application"))
{        
@Html.AntiForgeryToken()
@Html.HiddenFor(m => m.ProductId)
@Html.HiddenFor(m => m.OrderDetailId) @Html.HiddenFor(m => m.OrderId) @Html.HiddenFor(m => m.ActionName)
@Html.Partial("../Store/Application/Shared/AcceptSaveCancelButtons", Model)
<nav>
	<ul class="nav nav-tabs" id="tabs">
        <li class="active"><a href="#tabbasic" data-toggle="tab">Basic Information</a></li>
        @if (Model.ProductId != 70)
        {
		<li><a href="#tabsubscription" data-toggle="tab">@Model.ProductName Information</a></li>
        }
	</ul>
</nav>
<div class="tab-content">
    @Html.Partial("../Store/Application/Shared/CompanyInformation", Model)
    @if (Model.ProductId != 70)
    {
	<div id="tabsubscription" class="product-information tab-pane fade">
		<fieldset class="company-info-form">
            <legend>@Model.ProductName Information</legend>	
            @switch (Model.ProductId)
            {
                case 46:
                    if (Model.IsStoreRequest)
                    {
                    <span class="label-row span11">
			            <label class="control-label" for="Cost">@asi.asicentral.Resources.Resource.CurrentMembershipPackage</label>
                    </span>
                    <span class="label-row">
			            @Html.DropDownListFor(model => model.OptionId, asi.asicentral.util.store.ASISmartSalesHelper.GetCurrentMembershipOptions(), new { @class = "tab1" }) @Html.ValidationMessageFor(model => model.OptionId)
		            </span>
                    }
                    <span class="label-row span11">
                        @Html.LabelFor(m => m.Quantity)
		            </span>
		            <span class="label-row">
			            @Html.EditorFor(m => m.Quantity) @Html.ValidationMessageFor(m => m.Quantity)
		            </span>
                    break;
                case 62:
                <span class="label-row span11">
			        @Html.Label("Accepted by Name") 
		        </span>
		        <span class="label-row">
			        @Html.EditorFor(m => m.AcceptedByName) @Html.ValidationMessageFor(m => m.AcceptedByName)
		        </span>
                    break;
                case 71:
                <span class="label-row span11">
			        @Html.Label(asi.asicentral.Resources.Resource.NumberOfLicensesInPackage)
                </span>
		        <span class="label-row">
			        @Html.DropDownListFor(model => model.OptionId, asi.asicentral.util.store.CompanyStoreHelper.GetQuantityOptions(), new { @class = "tab1" }) @Html.ValidationMessageFor(model => model.OptionId)
		        </span>
                    break;
                case 77:
                       
                     @Html.HiddenFor(model => model.TotalCost)
                    <div class="control-group">
                        <label class="control-label" for="Cost">Selected package</label>
                        <div class="controls">
                            @foreach (var option in Model.Options)
                            {
                                <label class="radio">@Html.RadioButtonFor(model => model.OptionId, option.Value, new { @disabled="true" }) @option.Text </label>
                            }
                        </div>

                    </div>
                     <div class="control-group">
                        <label class="control-label" for="Cost">Selected Date</label>
                        <div class="controls">
                           <input type="text" value="@Model.StartDate" readonly="true" />
                        </div>

                    </div>
                    <div class="control-group">
                        <div class="controls">
                        </div>
                    </div>
                            break;
                default:
                <span class="label-row span11">
			        @Html.LabelFor(m => m.Quantity) 
		        </span>
		        <span class="label-row">
			        @Html.EditorFor(m => m.Quantity) @Html.ValidationMessageFor(m => m.Quantity)
		        </span>
                            break;
            }
		</fieldset>    
	</div><!-- END #orderdetail-information -->	
    }
 </div> <!-- END #content -->
}
    
@section Scripts {
    @Scripts.Render("~/bundles/form")
    <script src="/Scripts/asi.js"></script>
    <script>
        $('input.command').click(function (e) {
            $('#ActionName').val(e.target.value);
            if ($('#ActionName').val() == '@ApplicationController.COMMAND_ACCEPT') {
                //make sure we have Timms value
                if (!$('#ExternalReference').val()) {
                    asi.modal.confirm('Error', 'You need to pass a Timms ID number to approve order.', null, "#hide", "Close");
                    $("#ExternalReference").attr("class", "text-box single-line input-validation-error");
                    $("#timmsErrorMessage").text("You need to pass a Timms ID number to approve order.");
                    e.preventDefault();
                }
                else {
                    var isnum = /^\d+$/.test($('#ExternalReference').val());
                    if (!isnum) {
                        asi.modal.confirm('Error', 'TIMMS ID must contain only numbers.', null, "#hide", "Close");
                        $("#ExternalReference").attr("class", "text-box single-line input-validation-error");
                        $("#timmsErrorMessage").text("TIMMS ID must contain only numbers.");
                        e.preventDefault();
                    }
                }
            }
        });
        $('[rel*="isprimary"]').change(function () {
            $('[rel*="isprimary"]').attr("checked", false);
            this.checked = true;
        });
    </script>
}

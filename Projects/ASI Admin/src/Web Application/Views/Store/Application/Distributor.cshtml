@using asi.asicentral.web
@using asi.asicentral.model.store
@using asi.asicentral.web.Controllers.Store;
@model asi.asicentral.web.model.store.DistributorApplicationModel
@{
    Layout = "~/Views/Shared/_StoreLayout.cshtml";
}

<h1>@asi.asicentral.Resources.Resource.StoreTitleDistributorApplication (#@Model.OrderId)</h1>
<p>The Membership product purchase fee is @Model.Price.ToString("C")</p>
@Html.Partial("../Store/Application/Shared/OrderSummary", Model)
@using (Html.BeginForm("EditDistributor", "Application"))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.OrderDetailId) @Html.HiddenFor(m => m.OrderId) @Html.HiddenFor(m => m.ActionName) @Html.HiddenFor(m => m.CreateDate)
    @Html.Partial("../Store/Application/Shared/AcceptSaveCancelButtons", Model)
	<nav>
		<ul class="nav nav-tabs" id="tabs">
			<li class="active"><a href="#tabbasic" data-toggle="tab">Basic Information</a></li>
			<li><a href="#tabproduct" data-toggle="tab">Product Information</a></li>
		    <li><a href="#tabaccount" data-toggle="tab">Account Information</a></li>
			<li><a href="#tabterms" data-toggle="tab">Terms and Conditions</a></li>
		</ul>
	</nav>

	<div class="tab-content">
		@Html.Partial("../Store/Application/Shared/CompanyInformation", Model)
		@Html.Partial("../Store/Application/Shared/OrderT&Cs", Model)
<!------------------------------------product-information---------------------------------->					
		<div id="tabproduct" class="product-information tab-pane fade">
			<fieldset class="primary-business-revenue">
				<legend>Primary Business Revenue</legend>
				<span class="primary-business-row">
					<label class="primary-business-radio radio">
						@Html.RadioButtonFor(m => m.BuisnessRevenue, LegacyDistributorBusinessRevenue.BUSINESSREVENUE_PRINTING, Model.Printing ? new { @checked = "checked" } : null)
						@LegacyDistributorBusinessRevenue.BUSINESSREVENUE_PRINTING
					</label>
					<label class="primary-business-radio radio">
						@Html.RadioButtonFor(m => m.BuisnessRevenue, LegacyDistributorBusinessRevenue.BUSINESSREVENUE_PROMOTIONALPRODUCTS, Model.PromotionalProducts ? new { @checked = "checked" } : null)
						@LegacyDistributorBusinessRevenue.BUSINESSREVENUE_PROMOTIONALPRODUCTS
					</label>
					<label class="primary-business-radio radio">
						@Html.RadioButtonFor(m => m.BuisnessRevenue, LegacyDistributorBusinessRevenue.BUSINESSREVENUE_SIGNS, Model.Signs ? new { @checked = "checked" } : null)
						@LegacyDistributorBusinessRevenue.BUSINESSREVENUE_SIGNS
					</label>
					<label class="primary-business-radio radio">
						@Html.RadioButtonFor(m => m.BuisnessRevenue, LegacyDistributorBusinessRevenue.BUSINESSREVENUE_TROPHYAWARDS, Model.TrophyAwards ? new { @checked = "checked" } : null)
						@LegacyDistributorBusinessRevenue.BUSINESSREVENUE_TROPHYAWARDS
					</label>
					<label class="primary-business-radio radio">
						@Html.RadioButtonFor(m => m.BuisnessRevenue, LegacyDistributorBusinessRevenue.BUSINESSREVENUE_SCREENPRINTING, Model.ScreenPrinting ? new { @checked = "checked" } : null)
						@LegacyDistributorBusinessRevenue.BUSINESSREVENUE_SCREENPRINTING
					</label>
					<label class="primary-business-radio radio">
						@Html.RadioButtonFor(m => m.BuisnessRevenue, "Other", Model.Other ? new { @checked = "checked" } : null)
						Other
					</label>
                    <span class="label-row">@Html.EditorFor(m => m.OtherBusinessRevenue, Model.Other ? new { @class = "input-medium" } : new { @class = "input-medium hidden" }) @Html.ValidationMessageFor(m => m.OtherBusinessRevenue)</span>
				</span>
				<span class="label-row">
					@Html.LabelFor(m => m.NumberOfEmployee) 
					@Html.LabelFor(m => m.NumberOfSalesEmployee) 
					@Html.LabelFor(m => m.AnnualSalesVolumeASP) 
				</span>
				<span class="label-row">
					@Html.EditorFor(m => m.NumberOfEmployee) @Html.ValidationMessageFor(m => m.NumberOfEmployee) 
					@Html.EditorFor(m => m.NumberOfSalesEmployee) @Html.ValidationMessageFor(m => m.NumberOfSalesEmployee)
					@Html.EditorFor(m => m.AnnualSalesVolumeASP) @Html.ValidationMessageFor(m => m.AnnualSalesVolumeASP)
				</span>
				<span class="label-row">
					@Html.LabelFor(m => m.AnnualSalesVolume, new { @class = "span3" }) 
				</span>
				<span class="label-row">
					@Html.EditorFor(m => m.AnnualSalesVolume) @Html.ValidationMessageFor(m => m.AnnualSalesVolume)	
				</span>
			</fieldset>
			<fieldset class="product-lines">
				<legend>Product Lines</legend>
				<span class="checkbox-left">
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductA)">@Html.CheckBoxFor(model => model.ProductA) Auto Accessories</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductB)">@Html.CheckBoxFor(model => model.ProductB) Awards, Trophies &amp; Plaques</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductC)">@Html.CheckBoxFor(model => model.ProductC) Badges, Buttons</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.Product1)">@Html.CheckBoxFor(model => model.Product1) Bags (Canvas, Tote, Paper, Plastic, etc)</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductD)">@Html.CheckBoxFor(model => model.ProductD) Calendars and timepieces</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductO)">@Html.CheckBoxFor(model => model.ProductO) Cards (business, greeting and stationery), Signs &amp; displays</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductY)">@Html.CheckBoxFor(model => model.ProductY) Cups and mugs</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductZ)">@Html.CheckBoxFor(model => model.ProductZ) Decals, transfers, emblems</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductL)">@Html.CheckBoxFor(model => model.ProductL) Electronic/computer products</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductG)">@Html.CheckBoxFor(model => model.ProductG) Emblematic jewelry</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductF)">@Html.CheckBoxFor(model => model.ProductF) Food, Edibles</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductI)">@Html.CheckBoxFor(model => model.ProductI) Glass and ceramic products (crystal)</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductK)">@Html.CheckBoxFor(model => model.ProductK) Inflatables (balloons, etc)</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductV)">@Html.CheckBoxFor(model => model.ProductV) Health, safety and environmental products</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductJ)">@Html.CheckBoxFor(model => model.ProductJ) Housewares and home products (flashlights, cutlery, etc)</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductH)">@Html.CheckBoxFor(model => model.ProductH) Industrial and safety items Inflatables (balloons, etc)</label>
				</span>
				<span class="checkbox-right">
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductU)">@Html.CheckBoxFor(model => model.ProductU) Key tags</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductX)">@Html.CheckBoxFor(model => model.ProductX) Magnetic products</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductM)">@Html.CheckBoxFor(model => model.ProductM) Office and desk products</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductN)">@Html.CheckBoxFor(model => model.ProductN) Paper products (Pocket reminders, diaries)</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.Product3)">@Html.CheckBoxFor(model => model.Product3) Party Products (Balloons, Napkins, Plates, etc)</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.Product4)">@Html.CheckBoxFor(model => model.Product4) Personal Care, Beauty Products</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.Product5)">@Html.CheckBoxFor(model => model.Product5) Phone calling cards</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductE)">@Html.CheckBoxFor(model => model.ProductE) Plastic (non-vinyl)</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductP)">@Html.CheckBoxFor(model => model.ProductP) Sports Accessories (Bottles, coolers, equipment, golf balls, etc)</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductQ)">@Html.CheckBoxFor(model => model.ProductQ) Toys &amp; stuffed Animals</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductW)">@Html.CheckBoxFor(model => model.ProductW) Travel products</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.Product2)">@Html.CheckBoxFor(model => model.Product2) Umbrellas/sunglasses</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductR)">@Html.CheckBoxFor(model => model.ProductR) Vinyl (pocket, desk, home)</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductS)">@Html.CheckBoxFor(model => model.ProductS) Wearables (Caps, jackets, shirts, etc)</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.ProductT)">@Html.CheckBoxFor(model => model.ProductT) Writing instruments</label>
				</span>
			</fieldset>
		</div><!-- END #product-information -->			
<!------------------------------------account-information---------------------------------->			
		<div id="tabaccount" class="account-information tab-pane fade">
			<fieldset class="asi-contact">
				<legend>
					ASI Contact
				</legend>
				<span class="label-row">
					@Html.LabelFor(m => m.ASIContactName) 
				</span>
				<span class="label-row">
					@Html.EditorFor(m => m.ASIContactName, new { @class = "long" }) @Html.ValidationMessageFor(m => m.ASIContactName) 
				</span>
			</fieldset>
			<fieldset class="type-account">
				<legend>
					Type of Account
				</legend>
				<span class="checkbox-left">
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountA)">
						@Html.CheckBoxFor(model => model.AccountA)
						Agriculture &amp; Farming 
					</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountV)">
						@Html.CheckBoxFor(model => model.AccountV)
						Automotive dealers &amp; Mfgs
					</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountK)">
						@Html.CheckBoxFor(model => model.AccountK)
						Chemical &amp; Pharmaceutical companies   
					</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountS)">
						@Html.CheckBoxFor(model => model.AccountS)
						Construction companies
					</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountB)">
						@Html.CheckBoxFor(model => model.AccountB)
						Clubs, Associates, Civic Groups, Non Profits 
					</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountI)">
						@Html.CheckBoxFor(model => model.AccountI)
						Clothing, Appliances, Soft goods, Mfgs  
					</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountJ)">
						@Html.CheckBoxFor(model => model.AccountJ)
						Food, Tobacco, Sundries  
					</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountC)">
						@Html.CheckBoxFor(model => model.AccountC)
						Financial (banks, S&amp;L, credit unions)   
					</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountD)">
						@Html.CheckBoxFor(model => model.AccountD)
						Government agencies   
					</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountT)">
						@Html.CheckBoxFor(model => model.AccountT)
						Health &amp; Medical   
					</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountW)">
						@Html.CheckBoxFor(model => model.AccountW)
						Hospitality (resorts, hotels, restaurants, etc)   
					</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountF)">
						@Html.CheckBoxFor(model => model.AccountF)
						Insurance companies &amp; agencies    
					</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountH)">
						@Html.CheckBoxFor(model => model.AccountH)
						Industrial Products    
					</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountO)">
						@Html.CheckBoxFor(model => model.AccountO)
						Marketing Services (ad agencies)      
					</label>
				</span>
				<span class="checkbox-right">
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountX)">
						@Html.CheckBoxFor(model => model.AccountX)
						Manufacturing
					</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountY)">
						@Html.CheckBoxFor(model => model.AccountY)
						Media (Radio, TV, Newspapers, Magazines) 
					</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountL)">
						@Html.CheckBoxFor(model => model.AccountL)
						Political parties and candidates  
					</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountM)">
						@Html.CheckBoxFor(model => model.AccountM)
						Retail (stores, shopping centers)   
					</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountU)">
						@Html.CheckBoxFor(model => model.AccountU)
						Recreation (Theaters, Bowling, etc)    
					</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountN)">
						@Html.CheckBoxFor(model => model.AccountN)
						Professional Offices (Lawyers, Doctors) 
					</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountP)">
						@Html.CheckBoxFor(model => model.AccountP)
						Service businesses (real estate, personnel)  
					</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountE)">
						@Html.CheckBoxFor(model => model.AccountE)
						Schools, colleges, universities, etc.   
					</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountZ)">
						@Html.CheckBoxFor(model => model.AccountZ)
						Sports Related (Professional Teams)    
					</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountQ)">
						@Html.CheckBoxFor(model => model.AccountQ)
						Transportation (Airlines, Freight companies)    
					</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.Account1)">
						@Html.CheckBoxFor(model => model.Account1)
						Technology (Computers, Software Mfgs/Internet, Web Developers)    
					</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountG)">
						@Html.CheckBoxFor(model => model.AccountG)
						Utilities     
					</label>
					<label class="account-checkbox checkbox" for="@Html.NameFor(model => model.AccountR)">
						@Html.CheckBoxFor(model => model.AccountR)
						Wholesalers    
					</label>
				</span>
			  </fieldset>
	</div><!-- END #account-information -->

	</div><!-- END .tab-content -->    
}

@section Scripts {
    @Scripts.Render("~/bundles/form")
    <script src="/Scripts/asi.js"></script>
    <script>
        $('input.command').click(function (e) {
            $('#ActionName').val(e.target.value);
            if ($('#ActionName').val() == '@ApplicationController.COMMAND_ACCEPT') {
                //make sure we have Timms value
                if (!$('#ExternalReference').val()) {
                    asi.modal.confirm('Error', 'You need to pass a Timms ID number to approve order.', null, "#hide", "Close");
                    $("#ExternalReference").attr("class", "text-box single-line input-validation-error span2");
                    $("#timmsErrorMessage").text("You need to pass a Timms ID number to approve order.");
                    e.preventDefault();
                }
                else {
                    var isnum = /^\d+$/.test($('#ExternalReference').val());
                    if (!isnum) {
                        asi.modal.confirm('Error', 'TIMMS ID must contain only numbers.', null, "#hide", "Close");
                        $("#ExternalReference").attr("class", "text-box single-line input-validation-error span2");
                        $("#timmsErrorMessage").text("TIMMS ID must contain only numbers.");
                        e.preventDefault();
                    }
                    else if ($('#hasPendingTerms').length > 0) {
                        $("#termsWarningMessage").text('This order has pending Terms and Conditions.');
                        var confirm = window.confirm('This order has pending Terms and Conditions. Are you sure to accept the order?');
                        if (!confirm) {
                            e.preventDefault();
                        }
                    }
                }
            }
        });
        $('[rel*="isprimary"]').change(function () {
            $('[rel*="isprimary"]').attr("checked", false);
            this.checked = true;
        });
        $(".radio").change(function (evt) {
            if ($(evt.target).val() == "Other") $("#OtherBusinessRevenue").attr("class", "input-medium");
            else {
                $("#OtherBusinessRevenue").attr("class", "input-medium hidden");
                $("#OtherBusinessRevenue").val("");
            }
        });
    </script>
}

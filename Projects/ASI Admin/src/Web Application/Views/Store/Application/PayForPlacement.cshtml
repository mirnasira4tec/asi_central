@using asi.asicentral.web
@using asi.asicentral.model.store
@using asi.asicentral.web.Controllers.Store
@using asi.asicentral.web.model.store
@using asi.asicentral.Resources
@model asi.asicentral.web.model.store.ESPPayForPlacementModel

@{
    Layout = "~/Views/Shared/_StoreLayout.cshtml";
}

<h1>@string.Format(Model.ProductName) (#@Model.OrderId)</h1>
@if (Model.Price > 0.0m)
{
<p>@Model.ProductName product purchase fee is @Model.Price.ToString("C")</p>
}
@Html.Partial("../Store/Application/Shared/OrderSummary", Model)
@using (Html.BeginForm("EditPayForPlacement", "Application"))
{        
@Html.AntiForgeryToken()
@Html.HiddenFor(m => m.ProductId)
@Html.HiddenFor(m => m.OrderDetailId) @Html.HiddenFor(m => m.OrderId) @Html.HiddenFor(m => m.ActionName)
@Html.Partial("../Store/Application/Shared/AcceptSaveCancelButtons", Model)
<nav>
	<ul class="nav nav-tabs" id="tabs">
        <li class="active"><a href="#tabbasic" data-toggle="tab">Basic Information</a></li>
		<li><a href="#tabsubscription" data-toggle="tab">@(Model.ProductId == 47 ? "ESP Advertising" : "ESP WebSites") @Model.ProductName Information</a></li>
	</ul>
</nav>
<div class="tab-content">
    @Html.Partial("../Store/Application/Shared/CompanyInformation", Model)

	<div id="tabsubscription" class="basic-information tab-pane fade">
        @if (Model.Categries != null)
        {
            for (int count = 0; count < Model.Categries.Count; count++)
            {
                @Html.HiddenFor(m => m.Categries[count].CategoryName)
                <fieldset class="billing-info-form">
                <legend><label for="@Html.NameFor(m => m.Categries[count].IsSelected)">@Html.CheckBoxFor(model => model.Categries[count].IsSelected, new { id = string.Format("categoryCheck_{0}", count) }) @Model.Categries[count].CategoryName</label></legend>	
                <div class="label-row">
                    @if(Model.ProductId == 47)
                    {
				    @Html.Label(Resource.CPMOption) 
                    }
                    @Html.Label(Resource.PaymentOption) 
                    <span id="paymentAmountLabel_@count" hidden>
                    @Html.Label(Resource.PaymentAmount) 
                    </span>
                    <span id="impressionsLabel_@count" hidden>
                    @Html.Label(Resource.Impressions) 
                    </span>
                </div>
                <div class="label-row">
                    @if(Model.ProductId == 47)
                    {
                    @Html.DropDownListFor(model => model.Categries[count].CPMOption, new SelectList(asi.asicentral.util.store.ESPAdvertisingHelper.GetCPMOptions(), "Value", "Text", Model.Categries[count].CPMOption))
                    }
                    @Html.DropDownListFor(model => model.Categries[count].PaymentOption, new SelectList(asi.asicentral.util.store.ESPAdvertisingHelper.GetPaymentOptions(), "Value", "Text", Model.Categries[count].PaymentOption), new {@class = "PaymentOption" })
                    <span id="paymentAmountEditor_@count" hidden>
                        @Html.EditorFor(model => model.Categries[count].PaymentAmount)@Html.ValidationMessageFor(model => model.Categries[count].PaymentAmount)
                    </span>
                    <span id="impressionsEditor_@count" hidden>
				        @Html.EditorFor(model => model.Categries[count].Impressions) @Html.ValidationMessageFor(model => model.Categries[count].Impressions)
                    </span>
                </div>
                </fieldset>
            }
        }
	</div><!-- END #orderdetail-information -->	

 </div> <!-- END #content -->
}
    
@section Scripts {
    @Scripts.Render("~/bundles/form")
    <script src="/Scripts/asi.js"></script>
    <script>
      
        $('.dateField').datepicker()
        $('.date-clear').click(function () {
            $("input[name='" + this.id + "']").val('');
        });
    
        $('input.command').click(function (e) {
            $('#ActionName').val(e.target.value);
            if ($('#ActionName').val() == '@ApplicationController.COMMAND_ACCEPT') {
                //make sure we have Timms value
                if (!$('#ExternalReference').val()) {
                    asi.modal.confirm('Error', 'You need to pass a Timms ID number to approve order.', null, "#hide", "Close");
                    $("#ExternalReference").attr("class", "text-box single-line input-validation-error");
                    $("#timmsErrorMessage").text("You need to pass a Timms ID number to approve order.");
                    e.preventDefault();
                }
                else {
                    var isnum = /^\d+$/.test($('#ExternalReference').val());
                    if (!isnum) {
                        asi.modal.confirm('Error', 'TIMMS ID must contain only numbers.', null, "#hide", "Close");
                        $("#ExternalReference").attr("class", "text-box single-line input-validation-error");
                        $("#timmsErrorMessage").text("TIMMS ID must contain only numbers.");
                        e.preventDefault();
                    }
                    else {
                        var pendingTerms = false;
                        var orderId = $('#OrderId').val();
                        $.ajax({
                            type: 'POST',
                            contentType: 'application/json',
                            dataType: 'json',
                            url: '/Application/HasPendingTerms?orderId=' + orderId,
                            async: false,
                            success: function (data) {
                                pendingTerms = data.HasPendingTerms;
                            }
                        });

                        if (pendingTerms) {
                            $("#termsWarningMessage").text('This order has pending Terms and Conditions.');
                            var confirm = window.confirm('This order has pending Terms and Conditions. Are you sure to accept the order?');
                            if (!confirm) {
                                e.preventDefault();
                            }
                        }
                    }
                }
            }
        });
        $('[rel*="isprimary"]').change(function () {
            $('[rel*="isprimary"]').attr("checked", false);
            this.checked = true;
        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            ShowOrHide()

            $('.PaymentOption').change(function () {
                ShowOrHide() 
            });
        });
        function ShowOrHide() {
            $(".PaymentOption").each(function (index) {
                if ($("#Categries_" + index + "__PaymentOption").val() == "FB") {
                    $('#paymentAmountLabel_' + index).show()
                    $('#paymentAmountEditor_' + index).show()
                    $('#impressionsLabel_' + index).hide()
                    $('#impressionsEditor_' + index).hide()
                }
                else {
                    $('#impressionsLabel_' + index).show()
                    $('#impressionsEditor_' + index).show()
                    $('#paymentAmountLabel_' + index).hide()
                    $('#paymentAmountEditor_' + index).hide()
                }
            });
        }
    </script>
}

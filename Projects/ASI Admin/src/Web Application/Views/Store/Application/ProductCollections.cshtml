@using asi.asicentral.web
@using asi.asicentral.model.store
@using asi.asicentral.web.Controllers.Store
@model asi.asicentral.web.model.store.ProductCollectionsModel

@{
    Layout = "~/Views/Shared/_StoreLayout.cshtml";
}

<h1>@string.Format(Model.ProductName) (#@Model.OrderId)</h1>
@if (Model.Price > 0.0m)
{
<p>@Model.ProductName product purchase fee is @Model.Price.ToString("C")</p>
}
@Html.Partial("../Store/Application/Shared/OrderSummary", Model)
@using (Html.BeginForm("EditProductCollections", "Application"))
{        
@Html.AntiForgeryToken()
@Html.HiddenFor(m => m.ProductId)
@Html.HiddenFor(m => m.OrderDetailId) @Html.HiddenFor(m => m.OrderId) @Html.HiddenFor(m => m.ActionName)
@Html.Partial("../Store/Application/Shared/AcceptSaveCancelButtons", Model)
<nav>
	<ul class="nav nav-tabs" id="tabs">
        <li class="active"><a href="#tabbasic" data-toggle="tab">Basic Information</a></li>
		<li><a href="#tabsubscription" data-toggle="tab">@Model.ProductName Information</a></li>
	</ul>
</nav>
<div class="tab-content">
    @Html.Partial("../Store/Application/Shared/CompanyInformation", Model)

	<div id="tabsubscription" class="product-information tab-pane fade">
		<fieldset class="company-info-form">
            <legend>@Model.ProductName Information</legend>	
            @switch (Model.ProductId)
            {
                case 64:
                    if (Model.productCollections != null && Model.productCollections.Count > 0)
                    {
                        for (int i = 0; i < Model.productCollections.Count; i++)
                        {
                            if (Model.productCollections[i] != null)
                            { 
                                @Html.HiddenFor(m => Model.productCollections[i].ItemMonthId)
                                <span class="label-row">
                                    @Html.Raw("<b>" + new DateTime(2013, Model.productCollections[i].Month,15).ToString("MMMM") + " '"+ Model.productCollections[i].Year.ToString() + "</b>")
                                </span>
                                if (Model.productCollections[i].ProductCollectionItems != null && Model.productCollections[i].ProductCollectionItems.Count > 0)
                                { 
                                    <span class="label-row span11">
			                                    @Html.Label("Collection Name") 
			                                    @Html.Label("Item Numbers") 
		                                    </span>
                                    for (int j = 0; j < Model.productCollections[i].ProductCollectionItems.Count; j++)
                                    {
                                        if (Model.productCollections[i].ProductCollectionItems[j] != null)
                                        {
                                             @Html.HiddenFor(m => Model.productCollections[i].ProductCollectionItems[j].ItemId)
                                            <span class="label-row">
					                            @Html.EditorFor(m => Model.productCollections[i].ProductCollectionItems[j].Collection)
					                            @Html.EditorFor(m => Model.productCollections[i].ProductCollectionItems[j].ItemNumbers)
                                            </span>
                                        }
                                    }
                                }
                            }
                        }
                    }
                    break;
            }
		</fieldset>    
	</div><!-- END #orderdetail-information -->	

 </div> <!-- END #content -->
}
    
@section Scripts {
    @Scripts.Render("~/bundles/form")
    <script src="/Scripts/asi.js"></script>
    <script>
        $('input.command').click(function (e) {
            $('#ActionName').val(e.target.value);
            if ($('#ActionName').val() == '@ApplicationController.COMMAND_ACCEPT') {
                //make sure we have Timms value
                if (!$('#ExternalReference').val()) {
                    asi.modal.confirm('Error', 'You need to pass a Timms ID number to approve order.', null, "#hide", "Close");
                    $("#ExternalReference").attr("class", "text-box single-line input-validation-error");
                    $("#timmsErrorMessage").text("You need to pass a Timms ID number to approve order.");
                    e.preventDefault();
                }
                else {
                    var isnum = /^\d+$/.test($('#ExternalReference').val());
                    if (!isnum) {
                        asi.modal.confirm('Error', 'TIMMS ID must contain only numbers.', null, "#hide", "Close");
                        $("#ExternalReference").attr("class", "text-box single-line input-validation-error");
                        $("#timmsErrorMessage").text("TIMMS ID must contain only numbers.");
                        e.preventDefault();
                    }
                }
            }
        });
        $('[rel*="isprimary"]').change(function () {
            $('[rel*="isprimary"]').attr("checked", false);
            this.checked = true;
        });
    </script>
}

@using asi.asicentral.web.model.store;
@using asi.asicentral.model.store;
@using asi.asicentral.services;
@using asi.asicentral.interfaces;
@model  CompanyValidationsModel
@{
    ViewBag.Title = "Company Validations";
    Layout = "~/Views/Shared/_StoreLayout.cshtml";

    var endBuyers = Model.CompanyValidations.Where(li => li.Type == CompanyValidation.END_BUYERS_KEYWORDS).ToList();
    var registeredTrademarks = Model.CompanyValidations.Where(li => li.Type == CompanyValidation.REGISTERED_TRADEMARKS).ToList();
    var emailDomains = Model.CompanyValidations.Where(li => li.Type == CompanyValidation.EMAIL_DOMAINS).ToList();
}

<h2>Company Validations</h2>
    @using (Html.BeginForm("AddOrEdit", "CompanyValidations", FormMethod.Post, new { id = "frmAddEdit", @class = "form-horizontal" }))
    {
         @Html.AntiForgeryToken()
        <input type="hidden" name="Id" value="0" />
        <input type="hidden" name="Value" value="" />
        <input type="hidden" id="Type" name="Type" value="@CompanyValidation.END_BUYERS_KEYWORDS" />
        <div class="pull-left product-customize-form-left">
            <div class="control-group">
                <label class="control-label" for="Cost">Name/Keyword</label>
                <div class="controls">
                    @Html.TextBoxFor(model => model.NameOrKeyword)
                    @Html.ValidationMessageFor(model => model.NameOrKeyword)
                    
                </div>
            </div>
            <div class="control-group form-btns">
                <div class="controls">
                    <input class="btn btn-primary command span2" id="addValidation" type="submit" value="Add" />
                    <input class="btn btn-primary command span2" id="editValidation" type="submit" value="Save" data-id="" />
                    <input class="btn btn-primary command span2" id="cancelValidation" type="submit" value="Cancel" />
                </div>
            </div>
        </div>
    }
    
    <ul class="nav nav-tabs" id="tabs">
        <li class="active"><a href="#tabEndBuyers" data-toggle="tab">@CompanyValidation.END_BUYERS_KEYWORDS</a></li>
        <li><a href="#tabRegisteredTrademarks" data-toggle="tab">@CompanyValidation.REGISTERED_TRADEMARKS</a></li>
        <li><a href="#tabEmailDomains" data-toggle="tab">@CompanyValidation.EMAIL_DOMAINS</a></li>
    </ul>   
    <div id="tabEndBuyers" class="product-details tab-pane fade in active">
        <div id="endBuyers">
            @Html.Partial("../Store/CompanyValidations/GroupByType", endBuyers)
        </div>
    </div>

    <div id="tabRegisteredTrademarks" class="product-details tab-pane fade">
        <div id="registeredTrademarks">
            @Html.Partial("../Store/CompanyValidations/GroupByType", registeredTrademarks)
        </div>
    </div>

    <div id="tabEmailDomains" class="product-details tab-pane fade">
        <div id="emailDomains">
         @Html.Partial("../Store/CompanyValidations/GroupByType", emailDomains)
       </div>
    </div>

@section scripts {
    @Scripts.Render("~/bundles/form")
    <script type="text/javascript">
        $(document).ready(function () {
            $("#editValidation").hide();
            $("#cancelValidation").hide();
            SelectTabByIndex(@Model.Index);
            $('a.delete').click(function () {
           var confirms = confirm("Are you sure you want to delete?");
           if (confirms) 
                return true
            else
                return false
        });

        $('a.edit').click(function (ev) {
            $("#editValidation").show();
            $("#cancelValidation").show();
            $("#addValidation").hide();
            var value = $(this).attr('data-value');
            $('#NameOrKeyword').val(value);
            $('#editValidation').attr('data-id', $(this).attr('data-id'));
        });

        $("#addValidation").click(function (ev) {
            FillPostData();
        });

        $("#editValidation").click(function (ev) {
            var id = $(this).attr('data-id');
            $("#frmAddEdit [name=Id]").val(id);
            FillPostData();
        });

        $("#cancelValidation").click(function (ev) {
            $('#NameOrKeyword').val("");
            $("#editValidation").hide();
            $("#cancelValidation").hide();
            $("#addValidation").show();
            ev.preventDefault();
        });

        $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
            var index = $(e.target).closest('li').index();
            var type = "";
            if (index == 0) {
                $("#endBuyers").show();
                $("#registeredTrademarks").hide();
                $("#emailDomains").hide();
                type = '@CompanyValidation.END_BUYERS_KEYWORDS';
            }
            else if (index == 1) {
                $("#endBuyers").hide();
                $("#registeredTrademarks").show();
                $("#emailDomains").hide();
                type = '@CompanyValidation.REGISTERED_TRADEMARKS';
            }
            else if (index == 2) {
                $("#endBuyers").hide();
                $("#registeredTrademarks").hide();
                $("#emailDomains").show();
                type = '@CompanyValidation.EMAIL_DOMAINS';
            }
            $("#Type").val(type);
        })
    });

    function FillPostData() {
        $("#frmAddEdit [name=Value]").val($('#NameOrKeyword').val());
        $("#frmAddEdit").submit();
    }

    function SelectTabByIndex(index) {
        if(index == 0)
            $('a[href="#tabEndBuyers"]').tab('show');
        else if(index == 1)
            $('a[href="#tabRegisteredTrademarks"]').tab('show');
        else if (index == 2)
            $('a[href="#tabEmailDomains"]').tab('show');
    }
    </script>
}
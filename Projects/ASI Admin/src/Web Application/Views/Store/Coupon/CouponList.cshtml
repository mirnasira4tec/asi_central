@{
    ViewBag.Title = "Coupons";
    Layout = "~/Views/Shared/_StoreLayout.cshtml";
}
@using asi.asicentral.model.store;
@using asi.asicentral.services;
@using asi.asicentral.interfaces;
@model CouponListModel

<h1>List of Coupons</h1>
<div class="tabbable tabs-below small">
    <h5>Search by</h5>
    <div class="tab-content" id="formtab-content">
            <div class="well">
                @using (Html.BeginForm("List", "../Coupon/List", FormMethod.Get, new { @class = "form-inline row-fluid well" }))
                {     
                    <div>
                        <label for="couponCode">Coupon Code</label>
                        @Html.TextBoxFor(model => model.CouponCode)
                         <label for="MemberType">Member Type</label>
                        @Html.DropDownListFor(model => model.MemberType, new SelectList(CouponListModel.GetMemberTypes(), "Value", "Text"), new { name = "MemberType", value = "@Model.MemberType" })
                    <div class="span2 pull-right"> <input type="submit" value="Search" class="btn"></div>
                        <div class="clearfix"></div><br/>
                         @Html.CheckBoxFor(model => model.ShowValidOnly)
                        <label for="showValidOnly">Valid Coupon Only</label>
                    </div>
                }
        </div>
    </div>
</div>
@using (Html.BeginForm())
{
   
    <a href="/store/Coupon/Add" class="btn btn-primary">Add </a>
    <br />
    <br />
    
    <table class="table table-bordered table-condensed table-striped">
        <thead>
            <tr>
                <th>&nbsp;</th>
                <th>Code</th>
                <th>Type</th>
                <th>Application Fee Discount</th>
                <th>Product Discount</th>
                <th>Subscription Cost</th>
                <th>Valid From</th>
                <th>Valid To</th>
            </tr>
        </thead>
        <tbody>
             @foreach (var coupon in Model.Coupons)
             {
                <tr>
                    <td><a class="delete" id="@coupon.CouponCode" href="/store/Coupon/Delete?id=@coupon.Id"><i class="icon-trash"></i></a></td>
                    <td ><a href="/store/Coupon/Edit?id=@coupon.Id" data-toggle="tooltip" data-placement="right" title="@if (coupon.ContextId != null && coupon.ProductId != null)
                          {
                         <text>Context: </text>@GetContextName(coupon.ContextId); <text>Product: </text>@GetProductName(coupon.ProductId);
                          }
                          else if (coupon.ContextId != null)
                          {
                            @GetContextName(coupon.ContextId);
                          }
                          else if (coupon.ProductId != null)
                          {
                            @GetProductName(coupon.ProductId);
                          }">@coupon.CouponCode</a></td>
                    <td>
                        @if (coupon.ContextId != null && coupon.ProductId != null)
                        {
                            <span>Context/Product</span>
                        }
                        else if (coupon.ContextId != null)
                        {
                            <span>Context</span>
                        }
                        else if (coupon.ProductId != null)
                        {
                            <span>Product</span>
                        }
                    </td>
                    <td>@coupon.AppFeeDiscount</td>
                    <td>@coupon.ProductDiscount</td>
                    <td>@if (coupon.MonthlyCost == 0)
                        {
                            <span>N/A</span>  }
                        else
                        {
                        @coupon.MonthlyCost}
                    </td>
                    <td style="width:85px">@coupon.ValidFrom.ToString("dd-MMM-yyyy")</td>
                    <td style="width:85px">@coupon.ValidUpto.ToString("dd-MMM-yyyy")</td>
                </tr>
             }
        </tbody>
    </table>
    @functions{
        public IStoreService StoreService { get; set; }
        public string GetProductName(int? id)
        {
            if (id != null)
            {
                ContextProduct product = StoreService.GetAll<ContextProduct>(true).Where(detail => detail.Id == id).FirstOrDefault();
                return product.Name;
            }
            return null;
        }

        public string GetContextName(int? id)
        {
            if (id != null)
            {
                Context context = StoreService.GetAll<Context>(true).Where(detail => detail.Id == id).FirstOrDefault();
                return context.Name;
            }
            return null;
        }
  }
}


@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });
        $('a.delete').click(function () {
           var confirms = confirm("Are you sure you want to delete the coupon?");
           if (confirms) 
                return true
            else
                return false
        });
    </script>
}
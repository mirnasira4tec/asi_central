@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_StoreLayout.cshtml";
}

@using asi.asicentral.util;
@model  asi.asicentral.model.store.CouponModel

<h2>Edit/Add Coupons</h2>

@using (Html.BeginForm("SaveCouponDetails", "Coupon", FormMethod.Post, new { id = "couponform" }))
{
    @Html.HiddenFor(model => model.ActionName)
    @Html.AntiForgeryToken()
    
    
    <table class="table table-bordered table-condensed table-striped">

        <tbody>
            <tr>

                @Html.HiddenFor(model => model.Id)
                <td>Coupon Code</td>
                <td>@Html.EditorFor(model => model.CouponCode)<span id="span_Error_CouponCode" class="field-validation-error" style="display: none;">This field is required </span></td>

            </tr>
            <tr>
                <td>Is Fixed Amount</td>
                <td>@Html.CheckBoxFor(model => model.IsFixedAmount)</td>
            </tr>
            <tr id="trDiscountAmount">
                <td>Discounted Amount</td>
                <td>@Html.EditorFor(model => model.DiscountAmount)
                    <span id="span_Error_DiscountAmount" class="field-validation-error" style="display: none;">This field is required </span>
                </td>

            </tr>

            <tr id="trDiscountPercentage">
                <td>Discounted Percentage</td>
                <td>@Html.EditorFor(model => model.DiscountPercentage)
                    <span id="span_Error_DiscountPercentage" class="field-validation-error" style="display: none;">This field is required </span>
                </td>

            </tr>
            <tr>
                <td colspan="2">
                    <label class="radio pull-left dropdown-radio-btn1">
                        @Html.RadioButtonFor(model => model.IsProduct, true)
                        Product &nbsp;
                    </label>
                    @*</td>
                <td>*@
                    <label class="radio pull-left dropdown-radio-btn1">
                        @Html.RadioButtonFor(model => model.IsProduct, false)
                        Context
                    </label>
                </td>
            </tr>
            <tr id="Product">
                <td>Products
                </td>
                <td>
                    @Html.DropDownListFor(model => model.ProductId, Model.Products, "Select")
                    <span id="span_Error_DDlProducts" class="field-validation-error" style="display: none;">Please select a value </span>
                </td>
            </tr>

            <tr id="Context">
                <td>Context
                </td>
                <td>
                    @Html.DropDownListFor(model => model.ContextId, Model.Contexts, "Select")
                    <span id="span_Error_DDlContexts" class="field-validation-error" style="display: none;">Please select a value </span>
                </td>
            </tr>
            <tr>
                <td>Valid From</td>
                <td>@Html.EditorFor(model => model.ValidFrom, new { @class = "dateField" }) <i class="icon-remove date-clear" id="ValidFrom"></i>
                    <span id="span_Error_CurrDate" class="field-validation-error" style="display: none;">Valid from date should be greater than current date</span>
                </td>
            </tr>
            <tr>
                <td>Valid To</td>
                <td>@Html.EditorFor(model => model.ValidUpto, new { @class = "dateField" })  <i class="icon-remove date-clear" id="ValidUpto"></i><span id="span_Error_ValidDate" class="field-validation-error" style="display: none;">Valid From date should be less than Valid to date.</span></td>
                
            </tr>
            <tr>
                <td>Is Subscription</td>
                <td>@Html.CheckBoxFor(model => model.IsSubscription)</td>
            </tr>
            <tr>
            </tr>

        </tbody>
    </table>
    
    <input type="submit" class="command btn btn-primary" value="Save" />
    <input type="submit" class="command btn btn-primary" value="Cancel" /> 
}

@section scripts {
    @Scripts.Render("~/bundles/form")
    <script src="/Scripts/asi.js"></script>
    <script>
        var date = new Date();
        date.setDate(date.getDate() - 1);

        $("#ValidFrom").datepicker({
            startDate: date
        }).on('changeDate', function (selected) {
            startDate = new Date(selected.date.valueOf());
            startDate.setDate(startDate.getDate(new Date(selected.date.valueOf())));
            $("#ValidUpto").datepicker('setStartDate', startDate);
        });

        $('.date-clear').click(function () {
            $("input[name='" + this.id + "']").val('');
        });

    </script>
    <script type="text/javascript">
        $(function () {
            $('input.command').click(function (e) {
                if (e.target.value == "Save") {
                    return CheckValidation();
                }
                $('#ActionName').val(e.target.value);
            });
        });

        function RadioChange() {
            if ($("#IsProduct")[0].checked) {
                $("#Context").hide();
                $("#Product").show();
            }
            else {
                $("#Context").show();
                $("#Product").hide();
            }
        }

        function CheckChange() {
            if ($("#IsFixedAmount")[0].checked) {
                $("#trDiscountAmount").show();
                $("#trDiscountPercentage").hide();
            }
            else {
                $("#trDiscountPercentage").show();
                $("#trDiscountAmount").hide();
            }
        }

        function CheckValidation() {
            var begDT = new Date($('#ValidFrom').val()).getTime();
            var endDT = new Date($('#ValidUpto').val()).getTime();

            if ($("#CouponCode").val() == "") {
                $("#span_Error_CouponCode").show();
                $("#span_Error_DiscountAmount").hide();
                $("#span_Error_DiscountPercentage").hide();
                return false;
            }
            else {
                if ($("#IsFixedAmount")[0].checked) {
                    if ($("#DiscountAmount").val() == "" || $("#DiscountAmount").val() == 0) {
                        $("#span_Error_DiscountAmount").show();
                        $("#span_Error_CouponCode").hide();
                        return false;
                    }
                }
                else {
                    if ($("#DiscountPercentage").val() == "" || $("#DiscountPercentage").val() == 0) {
                        $("#span_Error_DiscountPercentage").show();
                        $("#span_Error_CouponCode").hide();
                        return false;
                    }
                }
                if ($("#IsProduct")[0].checked) {
                    if ($('#ProductId option:selected').text() == "Select") {
                        $("#span_Error_DDlProducts").show();
                        $("#span_Error_CouponCode").hide();
                        $("#span_Error_DiscountAmount").hide();
                        $("#span_Error_DiscountPercentage").hide();
                        return false;
                    }

                }
                else {
                    if ($('#ContextId option:selected').text() == "Select") {
                        $("#span_Error_DDlContexts").show();
                        $("#span_Error_CouponCode").hide();
                        $("#span_Error_DiscountAmount").hide();
                        $("#span_Error_DiscountPercentage").hide();
                        return false;
                    }
                }
            }

            return true;
        }

        $(document).ready(function () {
            RadioChange();
            CheckChange();
            startDate =new Date($('#ValidFrom').val());
            startDate.setDate(startDate.getDate(new Date($('#ValidFrom').val())));
            $("#ValidUpto").datepicker('setStartDate', startDate);
        });

        $("#IsFixedAmount").change(function () {
            CheckChange();
        });

        $('input[type=radio]').change(function () {
            RadioChange();
        });
    </script>

}
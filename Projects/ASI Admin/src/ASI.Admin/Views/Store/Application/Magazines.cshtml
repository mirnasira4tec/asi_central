@using asi.asicentral.web
@using asi.asicentral.model.store
@using asi.asicentral.web.Controllers.Store
@using asi.asicentral.Resources
@model asi.asicentral.web.model.store.MagazinesApplicationModel

@{
    Layout = "~/Views/Shared/_StoreLayout.cshtml";
}

<h1>@string.Format(@Resource.StoreTitleMagazinesApplication, Model.ProductName) (#@Model.OrderId)</h1>
@if (Model.Price > 0.0m)
{
<p>@Model.ProductName product purchase fee is @Model.Price.ToString("C")</p>
}
@Html.Partial("../Store/Application/Shared/OrderSummary", Model)
@using (Html.BeginForm("EditMagazines", "Application"))
{        
@Html.AntiForgeryToken()
@Html.HiddenFor(m => m.OrderDetailId) @Html.HiddenFor(m => m.OrderId) @Html.HiddenFor(m => m.ActionName)
@Html.Partial("../Store/Application/Shared/AcceptSaveCancelButtons", Model)
<nav>
	<ul class="nav nav-tabs" id="tabs">
        @if (!Model.IsHallmarkProduct)
        {
        <li class="active"><a href="#tabbasic" data-toggle="tab">Basic Information</a></li>
        }
        else
        {
        <li class="active"><a href="#tabbasic" data-toggle="tab">Hallmark Information</a></li>
        }
		<li><a href="#tabsubscription" data-toggle="tab">Subscription Information</a></li>
	</ul>
</nav>
<div class="tab-content">
    
    @if (!Model.IsHallmarkProduct)
    {
		@Html.Partial("../Store/Application/Shared/CompanyInformation", Model)
    }
    else if (Model.hallmarkInformation != null)
    {
        <div id="tabbasic" class="basic-information tab-pane fade in active">

        <fieldset class="company-info-form">	
            <legend>Hallmark Information for @Model.ProductName</legend>
        @for (int count = 0; count < Model.hallmarkInformation.Count; count++)
        {
            <span class="label-row">
				@Html.Label(Model.hallmarkInformation.ElementAt(count).Key)
				@Html.Label(Model.hallmarkInformation.ElementAt(count).Value)
		    </span>
        }
        </fieldset>
        
        </div><!-- END #basic-information -->	
    }

	<div id="tabsubscription" class="product-information tab-pane fade">
		<fieldset class="company-info-form">			
            @if (Model.Subscriptions != null && Model.Subscriptions.Count > 0)
            {
                for (int i = 0; i < Model.Subscriptions.Count; i++)
                {
                    if (Model.Subscriptions[i] != null)
                    {
                        @Html.HiddenFor(m => Model.Subscriptions[i].Id)
                        <legend>Subscription#@(i + 1)</legend>
                        <span class="row">@Html.Raw("<strong>Basic Information</strong>")</span>
                        <span class="label-row">
					        @Html.LabelFor(m => m.Subscriptions[i].CompanyName)
                            @if (!Model.IsHallmarkProduct)
                            {
                            @Html.LabelFor(m => m.Subscriptions[i].ASINumber)
					        @Html.LabelFor(m => m.Subscriptions[i].IsDigitalVersion)
                            }
				        </span>
                        <span class="label-row">
                            @Html.EditorFor(m => m.Subscriptions[i].CompanyName) @Html.ValidationMessageFor(m => m.Subscriptions[i].CompanyName)
                            @if (!Model.IsHallmarkProduct)
                            {
				            @Html.EditorFor(m => m.Subscriptions[i].ASINumber) @Html.ValidationMessageFor(m => m.Subscriptions[i].ASINumber)
				            @Html.CheckBoxFor(m => m.Subscriptions[i].IsDigitalVersion)
                            }
			            </span>
                            if (!Model.IsHallmarkProduct)
                            {
                        <span class="label-row">
					        @Html.LabelFor(m => m.Subscriptions[i].PrimaryBusiness)
                            @Html.LabelFor(m => m.Subscriptions[i].PrimaryBusinessOtherDesc)
				        </span>
                        <span class="label-row">
                            @Html.EditorFor(m => m.Subscriptions[i].PrimaryBusiness) @Html.ValidationMessageFor(m => m.Subscriptions[i].PrimaryBusiness)
				            @Html.EditorFor(m => m.Subscriptions[i].PrimaryBusinessOtherDesc) @Html.ValidationMessageFor(m => m.Subscriptions[i].PrimaryBusinessOtherDesc)
                         </span>
                            }
                            if (Model.Subscriptions[i].Contact != null)
                            {
                            @Html.HiddenFor(m => Model.Subscriptions[i].Contact.Id)
                            <span class="row">@Html.Raw("<strong>Contact Information</strong>")</span>
                            <span class="label-row">
					            @Html.LabelFor(m => m.Subscriptions[i].Contact.FirstName)
                                @Html.LabelFor(m => m.Subscriptions[i].Contact.LastName)
                                @Html.LabelFor(m => m.Subscriptions[i].Contact.Email)
				            </span>
                            <span class="label-row">
                                @Html.EditorFor(m => m.Subscriptions[i].Contact.FirstName) @Html.ValidationMessageFor(m => m.Subscriptions[i].Contact.FirstName)
					            @Html.EditorFor(m => m.Subscriptions[i].Contact.LastName) @Html.ValidationMessageFor(m => m.Subscriptions[i].Contact.LastName)
					            @Html.EditorFor(m => m.Subscriptions[i].Contact.Email) @Html.ValidationMessageFor(m => m.Subscriptions[i].Contact.Email)
				            </span>
                            <span class="label-row">
					            @Html.LabelFor(m => m.Subscriptions[i].Contact.Title)
                                @Html.LabelFor(m => m.Subscriptions[i].Contact.Phone)
					            @Html.LabelFor(m => m.Subscriptions[i].Contact.Fax)
				            </span>
                             <span class="label-row">
                                @Html.DropDownListFor(m => m.Subscriptions[i].Contact.Title, new SelectList(asi.asicentral.util.store.Helper.GetTitles(), "Value", "Text", Model.Subscriptions[i].Contact.Title)) @Html.ValidationMessageFor(m => m.Subscriptions[i].Contact.Title)
					            @Html.EditorFor(m => m.Subscriptions[i].Contact.Phone) @Html.ValidationMessageFor(m => m.Subscriptions[i].Contact.Phone)
					            @Html.EditorFor(m => m.Subscriptions[i].Contact.Fax) @Html.ValidationMessageFor(m => m.Subscriptions[i].Contact.Fax)
				            </span>
                                if (Model.IsHallmarkProduct)
                                {
                                <span class="label-row">
					            @Html.LabelFor(m => m.Subscriptions[i].Contact.Department)
				                </span>
                                <span class="label-row">
                                @Html.EditorFor(m => m.Subscriptions[i].Contact.Department) @Html.ValidationMessageFor(m => m.Subscriptions[i].Contact.Department)
				                </span>
                                }
                            }
                            if (Model.Subscriptions[i].Contact.Address != null)
                            {
                            @Html.HiddenFor(m => Model.Subscriptions[i].Contact.Address.Id)
                            <span class="row">@Html.Raw("<strong>Address Information</strong>")</span>
                            <span class="label-row">
				                @Html.LabelFor(m => m.Subscriptions[i].Contact.Address.Street1) 
				                @Html.LabelFor(m => m.Subscriptions[i].Contact.Address.Street2) 
				                @Html.LabelFor(m => m.Subscriptions[i].Contact.Address.City) 
			                </span>
			                <span class="label-row">
				                @Html.EditorFor(m => m.Subscriptions[i].Contact.Address.Street1) @Html.ValidationMessageFor(m => m.Subscriptions[i].Contact.Address.Street1)
				                @Html.EditorFor(m => m.Subscriptions[i].Contact.Address.Street2) @Html.ValidationMessageFor(m => m.Subscriptions[i].Contact.Address.Street2)
				                @Html.EditorFor(m => m.Subscriptions[i].Contact.Address.City) @Html.ValidationMessageFor(m => m.Subscriptions[i].Contact.Address.City)
			                </span>
			                <span class="label-row">
				                @Html.LabelFor(m => m.Subscriptions[i].Contact.Address.State) 
				                @Html.LabelFor(m => m.Subscriptions[i].Contact.Address.Zip) 
				                @Html.LabelFor(m => m.Subscriptions[i].Contact.Address.Country)
			                </span>
			                <span class="label-row">
                                @if (Model.Subscriptions[i].Contact.Address.Country == "USA")
                                {
				                @Html.DropDownListFor(m => m.Subscriptions[i].Contact.Address.State, new SelectList(asi.asicentral.util.HtmlHelper.GetStates(), "Value", "Text", Model.Subscriptions[i].Contact.Address.State)) @Html.ValidationMessageFor(m => m.Subscriptions[i].Contact.Address.State)
                                }
                                else
                                {
                                @Html.EditorFor(m => m.Subscriptions[i].Contact.Address.State)  @Html.ValidationMessageFor(m => m.Subscriptions[i].Contact.Address.State)
                                }
				                @Html.EditorFor(m => m.Subscriptions[i].Contact.Address.Zip) @Html.ValidationMessageFor(m => m.Subscriptions[i].Contact.Address.Zip)
                                @if (!Model.IsHallmarkProduct || (Model.IsHallmarkProduct && Model.Subscriptions[i].Contact.Address.Country == "USA"))
                                {
                                @Html.DropDownListFor(m => m.Subscriptions[i].Contact.Address.Country, new SelectList(asi.asicentral.util.HtmlHelper.GetCountries(), "Value", "Text", Model.Subscriptions[i].Contact.Address.Country)) @Html.ValidationMessageFor(m => m.Subscriptions[i].Contact.Address.Country)
                                }
                                else
                                {
				                @Html.DropDownListFor(m => m.Subscriptions[i].Contact.Address.Country, new SelectList(asi.asicentral.util.store.MagazinesHelper.GetCountriesForWearables(), "Value", "Text", Model.Subscriptions[i].Contact.Address.Country)) @Html.ValidationMessageFor(m => m.Subscriptions[i].Contact.Address.Country)
                                }
			                </span>
                            }
                    }
                }
            }
		</fieldset>    
	</div><!-- END #subscription-information -->	

</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/form")
    <script src="/Scripts/asi.js"></script>
    <script src="/Scripts/orders.js"></script>
    @if(Model.IsHallmarkProduct)
    {
        <script type="text/javascript">
            $('.save').hide()
        </script>
    }
}
